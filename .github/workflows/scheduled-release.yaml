name: Scheduled semantic release

on:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  create_release_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request from develop to main
        run: |
          PR_URL=$(gh pr list --head develop --base main --json number --jq '.[0].url')

          if [ -z "$PR_URL" ]; then
            PR_URL=$(gh pr create \
              --base main \
              --head develop \
              --title "chore(release): merge develop into main" \
              --body "Automated scheduled release PR")
          fi
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        run: |
          PR_NUMBER=$(gh pr list --head develop --base main --state open --json number --jq '.[0].number')

          if [ -n "$PR_NUMBER" ]; then
            AUTHOR=$(gh pr view "$PR_NUMBER" --json author --jq '.author.login')
            if [ "$AUTHOR" = "github-actions[bot]" ]; then
              echo "Existing release pull request by github-actions[bot], skipping creation."
              echo "pr_url=https://github.com/${{ github.repository }}/pull/$PR_NUMBER" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          echo "No existing pull request by github-actions[bot], creating a new release pull request"
          PR_URL=$(gh pr create \
            --base main \
            --head develop \
            --title "chore(release): merge develop into main" \
            --body "Automated scheduled release PR")
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
