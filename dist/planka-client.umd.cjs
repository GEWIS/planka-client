(function(u,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(u=typeof globalThis<"u"?globalThis:u||self,m(u["planka-client"]={}))})(this,function(u){"use strict";class m extends Error{constructor(e,o,i){super(i),this.name="ApiError",this.url=o.url,this.status=o.status,this.statusText=o.statusText,this.body=o.body,this.request=e}}class y extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}}class b{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this.cancelHandlers=[],this.promise=new Promise((o,i)=>{this._resolve=o,this._reject=i;const n=h=>{this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,this._resolve&&this._resolve(h))},d=h=>{this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,this._reject&&this._reject(h))},c=h=>{this._isResolved||this._isRejected||this._isCancelled||this.cancelHandlers.push(h)};return Object.defineProperty(c,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(c,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(c,"isCancelled",{get:()=>this._isCancelled}),e(n,d,c)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,o){return this.promise.then(e,o)}catch(e){return this.promise.catch(e)}finally(e){return this.promise.finally(e)}cancel(){if(!(this._isResolved||this._isRejected||this._isCancelled)){if(this._isCancelled=!0,this.cancelHandlers.length)try{for(const e of this.cancelHandlers)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.cancelHandlers.length=0,this._reject&&this._reject(new y("Request aborted"))}}get isCancelled(){return this._isCancelled}}class f{constructor(){this._fns=[]}eject(e){const o=this._fns.indexOf(e);o!==-1&&(this._fns=[...this._fns.slice(0,o),...this._fns.slice(o+1)])}use(e){this._fns=[...this._fns,e]}}const s={BASE:process.env.PLANKA_URL||"http://localhost:3000",CREDENTIALS:"include",ENCODE_PATH:void 0,HEADERS:void 0,PASSWORD:void 0,TOKEN:void 0,USERNAME:void 0,VERSION:"1.0.0",WITH_CREDENTIALS:!1,interceptors:{request:new f,response:new f}};var r=(t=>(t.s400="Bad request",t.s401="Unauthorized",t.s404="Not found",t.s409="Conflict",t.s422="Bad request (unprocessable)",t))(r||{});const A=t=>typeof t=="string",T=t=>A(t)&&t!=="",k=t=>t instanceof Blob,g=t=>t instanceof FormData,E=t=>{try{return btoa(t)}catch{return Buffer.from(t).toString("base64")}},S=t=>{const e=[],o=(n,d)=>{e.push(`${encodeURIComponent(n)}=${encodeURIComponent(String(d))}`)},i=(n,d)=>{d!=null&&(d instanceof Date?o(n,d.toISOString()):Array.isArray(d)?d.forEach(c=>i(n,c)):typeof d=="object"?Object.entries(d).forEach(([c,h])=>i(`${n}[${c}]`,h)):o(n,d))};return Object.entries(t).forEach(([n,d])=>i(n,d)),e.length?`?${e.join("&")}`:""},j=(t,e)=>{const o=t.ENCODE_PATH||encodeURI,i=e.url.replace("{api-version}",t.VERSION).replace(/{(.*?)}/g,(d,c)=>Object.prototype.hasOwnProperty.call(e.path,c)?o(String(e.path[c])):d),n=t.BASE+i;return e.query?n+S(e.query):n},$=t=>{if(t.formData){const e=new FormData,o=(i,n)=>{A(n)||k(n)?e.append(i,n):e.append(i,JSON.stringify(n))};return Object.entries(t.formData).filter(([,i])=>i!=null).forEach(([i,n])=>{Array.isArray(n)?n.forEach(d=>o(i,d)):o(i,n)}),e}},I=async(t,e)=>typeof e=="function"?e(t):e,z=async(t,e)=>{const[o,i,n,d]=await Promise.all([I(e,t.TOKEN),I(e,t.USERNAME),I(e,t.PASSWORD),I(e,t.HEADERS)]),c=Object.entries({Accept:"application/json",...d,...e.headers}).filter(([,h])=>h!=null).reduce((h,[p,l])=>({...h,[p]:String(l)}),{});if(T(o)&&(c.Authorization=`Bearer ${o}`),T(i)&&T(n)){const h=E(`${i}:${n}`);c.Authorization=`Basic ${h}`}return e.body!==void 0&&(e.mediaType?c["Content-Type"]=e.mediaType:k(e.body)?c["Content-Type"]=e.body.type||"application/octet-stream":A(e.body)?c["Content-Type"]="text/plain":g(e.body)||(c["Content-Type"]="application/json")),new Headers(c)},P=t=>{var e,o;if(t.body!==void 0)return(e=t.mediaType)!=null&&e.includes("application/json")||(o=t.mediaType)!=null&&o.includes("+json")?JSON.stringify(t.body):A(t.body)||k(t.body)||g(t.body)?t.body:JSON.stringify(t.body)},q=async(t,e,o,i,n,d,c)=>{const h=new AbortController;let p={headers:d,body:i??n,method:e.method,signal:h.signal};t.WITH_CREDENTIALS&&(p.credentials=t.CREDENTIALS);for(const l of t.interceptors.request._fns)p=await l(p);return c(()=>h.abort()),await fetch(o,p)},v=(t,e)=>{if(e){const o=t.headers.get(e);if(A(o))return o}},R=async t=>{if(t.status!==204)try{const e=t.headers.get("Content-Type");if(e){const o=["application/octet-stream","application/pdf","application/zip","audio/","image/","video/"];if(e.includes("application/json")||e.includes("+json"))return await t.json();if(o.some(i=>e.includes(i)))return await t.blob();if(e.includes("multipart/form-data"))return await t.formData();if(e.includes("text/"))return await t.text()}}catch(e){console.error(e)}},w=(t,e)=>{const i={400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"Im a teapot",421:"Misdirected Request",422:"Unprocessable Content",423:"Locked",424:"Failed Dependency",425:"Too Early",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required",...t.errors}[e.status];if(i)throw new m(t,e,i);if(!e.ok){const n=e.status??"unknown",d=e.statusText??"unknown",c=(()=>{try{return JSON.stringify(e.body,null,2)}catch{return}})();throw new m(t,e,`Generic Error: status: ${n}; status text: ${d}; body: ${c}`)}},a=(t,e)=>new b(async(o,i,n)=>{try{const d=j(t,e),c=$(e),h=P(e),p=await z(t,e);if(!n.isCancelled){let l=await q(t,e,d,h,c,p,n);for(const J of t.interceptors.response._fns)l=await J(l);const V=await R(l),W=v(l,e.responseHeader),B={url:d,ok:l.ok,status:l.status,statusText:l.statusText,body:W??V};w(e,B),o(B.body)}}catch(d){i(d)}});class C{constructor(e){this.planka=e}getConfig(){return a(s,{method:"GET",url:"/api/config"})}async authorize(e){const o=await a(s,{method:"POST",url:"/api/access-tokens",body:e.requestBody,errors:{400:r.s400}});this.planka.setAccessToken(o.item)}async authorizeOidc(e){const o=await a(s,{method:"POST",url:"/api/access-tokens/exchange-using-oidc",body:e.requestBody,errors:{400:r.s400}});this.planka.setAccessToken(o.item)}async unauthorize(){await a(s,{method:"DELETE",url:"/api/access-tokens/me",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401}}),this.planka.setAccessToken(null)}}class O{constructor(e){this.planka=e}getAll(){return a(s,{method:"GET",url:"/api/users",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}create(e){return a(s,{method:"POST",url:"/api/users",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}get(e){return a(s,{method:"GET",url:"/api/users/{userId}",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/users/{userId}",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/users/{userId}",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}updateMail(e){return a(s,{method:"PATCH",url:"/api/users/{userId}/email",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404,409:r.s409}})}updatePassword(e){return a(s,{method:"PATCH",url:"/api/users/{userId}/password",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404,409:r.s409}})}updateName(e){return a(s,{method:"PATCH",url:"/api/users/{userId}/username",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404,409:r.s409}})}updateAvatar(e){return a(s,{method:"POST",url:"/api/users/{userId}/avatar",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404,422:r.s422}})}}class _{constructor(e){this.planka=e}create(e){return a(s,{method:"POST",url:"/api/cards/{cardId}/comment-actions",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/comment-actions/{actionId}",path:{actionId:e.actionId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/attachments/{attachmentId}",path:{attachmentId:e.attachmentId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}}class D{constructor(e){this.planka=e}create(e){return a(s,{method:"POST",url:"/api/cards/{cardId}/attachments",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404,422:r.s422}})}update(e){return a(s,{method:"PATCH",url:"/api/attachments/{attachmentId}",path:{attachmentId:e.attachmentId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/attachments/{attachmentId}",path:{attachmentId:e.attachmentId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}download(e){return a(s,{method:"GET",url:"/attachments/{attachmentId}/download/{filename}",path:{attachmentId:e.attachmentId,filename:e.filename},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}thumbnail(e){return a(s,{method:"GET",url:"/attachments/{attachmentId}/download/thumbnails/cover-256.{extension}",path:{attachmentId:e.attachmentId,extension:e.extension},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}}class L{constructor(e){this.planka=e}create(e){return a(s,{method:"DELETE",url:"/api/projects/{projectId}/managers",path:{projectId:e.projectId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}get(e){return a(s,{method:"GET",url:"/api/boards/{projectId}",path:{projectId:e.boardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/boards/{boardId}",path:{projectId:e.boardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/boards/{boardId}",path:{boardId:e.boardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}addMember(e){return a(s,{method:"POST",url:"/api/boards/{boardId}/memberships",path:{boardId:e.boardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404,409:r.s409}})}updateMember(e){return a(s,{method:"PATCH",url:"/api/board-memberships/{membershipId}",path:{membershipId:e.membershipId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}removeMember(e){return a(s,{method:"DELETE",url:"/api/board-memberships/{membershipId}",path:{membershipId:e.membershipId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}}class H{constructor(e){this.planka=e}create(e){return a(s,{method:"POST",url:"/api/lists/{listId}/cards",path:{listId:e.listId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404,422:r.s422}})}get(e){return a(s,{method:"GET",url:"/api/cards/{cardId}",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/cards/{cardId}",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}delete(e){return a(s,{method:"DELETE",url:"/api/cards/{cardId}",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}duplicate(e){return a(s,{method:"POST",url:"/api/cards/{cardId}/duplicate",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}addMember(e){return a(s,{method:"POST",url:"/api/cards/{cardId}/memberships",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}removeMember(e){return a(s,{method:"DELETE",url:"/api/cards/{cardId}/memberships",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}addLabel(e){return a(s,{method:"POST",url:"/api/cards/{cardId}/labels",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}removeLabel(e){return a(s,{method:"DELETE",url:"/api/cards/{cardId}/labels/{labelId}",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{400:r.s400,401:r.s401,404:r.s404}})}}class N{constructor(e){this.planka=e}create(e){return a(s,{method:"POST",url:"/api/boards/{boardId}/labels",path:{boardId:e.boardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/labels/{labelId}",path:{labelId:e.labelId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/labels/{labelId}",path:{labelId:e.labelId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}}class x{constructor(e){this.planka=e}create(e){return a(s,{method:"POST",url:"/api/boards/{boardId}/lists",path:{boardId:e.boardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/lists/{listId}",path:{listId:e.listId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}delete(e){return a(s,{method:"DELETE",url:"/api/lists/{listId}",path:{listId:e.listId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}sort(e){return a(s,{method:"POST",url:"/api/lists/{listId}/sort",path:{listId:e.listId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}}class U{constructor(e){this.planka=e}getAll(){return a(s,{method:"GET",url:"/api/notifications",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}get(e){return a(s,{method:"GET",url:"/api/notifications/{notificationId}",path:{notificationId:e.notificationId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/notifications/{notificationId}",path:{notificationId:e.notificationId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}}class G{constructor(e){this.planka=e}getAll(){return a(s,{method:"GET",url:"/api/projects",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401}})}create(e){return a(s,{method:"POST",url:"/api/projects",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401}})}get(e){return a(s,{method:"GET",url:"/api/projects/{projectId}",path:{projectId:e.projectId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/projects/{projectId}",path:{projectId:e.projectId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/projects/{projectId}",path:{projectId:e.projectId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}setBackgroundImage(e){return a(s,{method:"POST",url:"/api/projects/{projectId}/background-image",path:{projectId:e.projectId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404,422:r.s422}})}addManager(e){return a(s,{method:"POST",url:"/api/projects/{projectId}/managers",path:{projectId:e.projectId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}removeManager(e){return a(s,{method:"DELETE",url:"/api/projects/{projectId}/managers",path:{projectId:e.managerId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{400:r.s400,401:r.s401,404:r.s404}})}}class M{constructor(e){this.planka=e}create(e){return a(s,{method:"POST",url:"/api/cards/{cardId}/tasks",path:{cardId:e.cardId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:r.s400,401:r.s401,404:r.s404}})}update(e){return a(s,{method:"PATCH",url:"/api/tasks/{taskId}",path:{taskId:e.taskId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:r.s401,404:r.s404}})}remove(e){return a(s,{method:"DELETE",url:"/api/tasks/{taskId}",path:{taskId:e.taskId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:r.s401,404:r.s404}})}}class F{constructor(){this.accessToken=null,this.ActionService=new _(this),this.AttachmentService=new D(this),this.AuthService=new C(this),this.BoardService=new L(this),this.CardService=new H(this),this.LabelService=new N(this),this.ListService=new x(this),this.NotificationService=new U(this),this.ProjectService=new G(this),this.TaskService=new M(this),this.UserService=new O(this)}setAccessToken(e){this.accessToken=e}getAccessToken(){return this.accessToken}}u.ApiError=m,u.CancelError=y,u.CancelablePromise=b,u.OpenAPI=s,u.Planka=F,u.StatusCode=r,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
