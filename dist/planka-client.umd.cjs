(function(l,p){typeof exports=="object"&&typeof module<"u"?p(exports):typeof define=="function"&&define.amd?define(["exports"],p):(l=typeof globalThis<"u"?globalThis:l||self,p(l["planka-client"]={}))})(this,function(l){"use strict";class p extends Error{constructor(e,r,n){super(n),this.name="ApiError",this.url=r.url,this.status=r.status,this.statusText=r.statusText,this.body=r.body,this.request=e}}class A extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}}class E{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this.cancelHandlers=[],this.promise=new Promise((r,n)=>{this._resolve=r,this._reject=n;const s=c=>{this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,this._resolve&&this._resolve(c))},i=c=>{this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,this._reject&&this._reject(c))},a=c=>{this._isResolved||this._isRejected||this._isCancelled||this.cancelHandlers.push(c)};return Object.defineProperty(a,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(a,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(a,"isCancelled",{get:()=>this._isCancelled}),e(s,i,a)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,r){return this.promise.then(e,r)}catch(e){return this.promise.catch(e)}finally(e){return this.promise.finally(e)}cancel(){if(!(this._isResolved||this._isRejected||this._isCancelled)){if(this._isCancelled=!0,this.cancelHandlers.length)try{for(const e of this.cancelHandlers)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.cancelHandlers.length=0,this._reject&&this._reject(new A("Request aborted"))}}get isCancelled(){return this._isCancelled}}class g{constructor(){this._fns=[]}eject(e){const r=this._fns.indexOf(e);r!==-1&&(this._fns=[...this._fns.slice(0,r),...this._fns.slice(r+1)])}use(e){this._fns=[...this._fns,e]}}const d={BASE:process.env.PLANKA_URL||"http://localhost:3000",CREDENTIALS:"include",ENCODE_PATH:void 0,HEADERS:void 0,PASSWORD:void 0,TOKEN:void 0,USERNAME:void 0,VERSION:"1.0.0",WITH_CREDENTIALS:!1,interceptors:{request:new g,response:new g}};var o=(t=>(t.s400="Bad request",t.s401="Unauthorized",t.s404="Not found",t.s409="Conflict",t.s422="Bad request (unprocessable)",t))(o||{});const y=t=>typeof t=="string",m=t=>y(t)&&t!=="",b=t=>t instanceof Blob,R=t=>t instanceof FormData,_=t=>{try{return btoa(t)}catch{return Buffer.from(t).toString("base64")}},k=t=>{const e=[],r=(s,i)=>{e.push(`${encodeURIComponent(s)}=${encodeURIComponent(String(i))}`)},n=(s,i)=>{i!=null&&(i instanceof Date?r(s,i.toISOString()):Array.isArray(i)?i.forEach(a=>n(s,a)):typeof i=="object"?Object.entries(i).forEach(([a,c])=>n(`${s}[${a}]`,c)):r(s,i))};return Object.entries(t).forEach(([s,i])=>n(s,i)),e.length?`?${e.join("&")}`:""},w=(t,e)=>{const r=t.ENCODE_PATH||encodeURI,n=e.url.replace("{api-version}",t.VERSION).replace(/{(.*?)}/g,(i,a)=>Object.prototype.hasOwnProperty.call(e.path,a)?r(String(e.path[a])):i),s=t.BASE+n;return e.query?s+k(e.query):s},C=t=>{if(t.formData){const e=new FormData,r=(n,s)=>{y(s)||b(s)?e.append(n,s):e.append(n,JSON.stringify(s))};return Object.entries(t.formData).filter(([,n])=>n!=null).forEach(([n,s])=>{Array.isArray(s)?s.forEach(i=>r(n,i)):r(n,s)}),e}},T=async(t,e)=>typeof e=="function"?e(t):e,I=async(t,e)=>{const[r,n,s,i]=await Promise.all([T(e,t.TOKEN),T(e,t.USERNAME),T(e,t.PASSWORD),T(e,t.HEADERS)]),a=Object.entries({Accept:"application/json",...i,...e.headers}).filter(([,c])=>c!=null).reduce((c,[f,h])=>({...c,[f]:String(h)}),{});if(m(r)&&(a.Authorization=`Bearer ${r}`),m(n)&&m(s)){const c=_(`${n}:${s}`);a.Authorization=`Basic ${c}`}return e.body!==void 0&&(e.mediaType?a["Content-Type"]=e.mediaType:b(e.body)?a["Content-Type"]=e.body.type||"application/octet-stream":y(e.body)?a["Content-Type"]="text/plain":R(e.body)||(a["Content-Type"]="application/json")),new Headers(a)},j=t=>{var e,r;if(t.body!==void 0)return(e=t.mediaType)!=null&&e.includes("application/json")||(r=t.mediaType)!=null&&r.includes("+json")?JSON.stringify(t.body):y(t.body)||b(t.body)||R(t.body)?t.body:JSON.stringify(t.body)},P=async(t,e,r,n,s,i,a)=>{const c=new AbortController;let f={headers:i,body:n??s,method:e.method,signal:c.signal};t.WITH_CREDENTIALS&&(f.credentials=t.CREDENTIALS);for(const h of t.interceptors.request._fns)f=await h(f);return a(()=>c.abort()),await fetch(r,f)},q=(t,e)=>{if(e){const r=t.headers.get(e);if(y(r))return r}},O=async t=>{if(t.status!==204)try{const e=t.headers.get("Content-Type");if(e){const r=["application/octet-stream","application/pdf","application/zip","audio/","image/","video/"];if(e.includes("application/json")||e.includes("+json"))return await t.json();if(r.some(n=>e.includes(n)))return await t.blob();if(e.includes("multipart/form-data"))return await t.formData();if(e.includes("text/"))return await t.text()}}catch(e){console.error(e)}},B=(t,e)=>{const n={400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"Im a teapot",421:"Misdirected Request",422:"Unprocessable Content",423:"Locked",424:"Failed Dependency",425:"Too Early",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required",...t.errors}[e.status];if(n)throw new p(t,e,n);if(!e.ok){const s=e.status??"unknown",i=e.statusText??"unknown",a=(()=>{try{return JSON.stringify(e.body,null,2)}catch{return}})();throw new p(t,e,`Generic Error: status: ${s}; status text: ${i}; body: ${a}`)}},u=(t,e)=>new E(async(r,n,s)=>{try{const i=w(t,e),a=C(e),c=j(e),f=await I(t,e);if(!s.isCancelled){let h=await P(t,e,i,c,a,f,s);for(const $ of t.interceptors.response._fns)h=await $(h);const v=await O(h),H=q(h,e.responseHeader),S={url:i,ok:h.ok,status:h.status,statusText:h.statusText,body:H??v};B(e,S),r(S.body)}}catch(i){n(i)}});class N{constructor(e){this.planka=e}getConfig(){return u(d,{method:"GET",url:"/api/config"})}async authorize(e){const r=await u(d,{method:"POST",url:"/api/access-tokens",body:e.requestBody,errors:{400:o.s400}});this.planka.setAccessToken(r.item)}async authorizeOidc(e){const r=await u(d,{method:"POST",url:"/api/access-tokens/exchange-using-oidc",body:e.requestBody,errors:{400:o.s400}});this.planka.setAccessToken(r.item)}async unauthorize(){await u(d,{method:"DELETE",url:"/api/access-tokens/me",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:o.s401}}),this.planka.setAccessToken(null)}}class D{constructor(e){this.planka=e}getUsers(){return u(d,{method:"GET",url:"/api/users",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:o.s401,404:o.s404}})}createUser(e){return u(d,{method:"POST",url:"/api/users",headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{401:o.s401,404:o.s404}})}getUser(e){return u(d,{method:"GET",url:"/api/users/{userId}",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:o.s401,404:o.s404}})}updateUser(e){return u(d,{method:"PATCH",url:"/api/users/{userId}",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:o.s400,401:o.s401,404:o.s404}})}deleteUser(e){return u(d,{method:"DELETE",url:"/api/users/{userId}",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},errors:{401:o.s401,404:o.s404}})}updateUserMail(e){return u(d,{method:"PATCH",url:"/api/users/{userId}/email",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:o.s400,401:o.s401,404:o.s404,409:o.s409}})}updateUserPassword(e){return u(d,{method:"PATCH",url:"/api/users/{userId}/email",path:{userId:e.userId},headers:{Authorization:`Bearer ${this.planka.getAccessToken()}`},body:e.requestBody,errors:{400:o.s400,401:o.s401,404:o.s404,409:o.s409}})}}class U{constructor(){this.accessToken=null,this.AuthService=new N(this),this.UserService=new D(this)}setAccessToken(e){this.accessToken=e}getAccessToken(){return this.accessToken}}l.ApiError=p,l.CancelError=A,l.CancelablePromise=E,l.OpenAPI=d,l.Planka=U,l.StatusCode=o,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
